import{j as e,T as c,F as d,c as x,Z as m,G as p}from"./react-B3_TzbfE.js";import{S as u}from"./Section-55xCtm4M.js";import{T as s,e as h,g,h as y,B as f}from"./index-Bxxf6lL7.js";import{m as l}from"./animations-B6mVPKFe.js";import"./vendor-CaMLZvp6.js";const v=()=>{const r=[{id:1,title:"DFT Automation Suite",description:"A Python-based CLI tool to streamline Density Functional Theory (DFT) calculations, manage input/output files for software like VASP or Quantum Espresso, and automate job submissions to HPC clusters using SLURM or PBS.",problemSolved:"Reduces manual intervention and potential for errors in complex DFT workflows, significantly speeding up research cycles for materials simulation.",icon:d,codeExample:e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"text-slate-500 dark:text-slate-400",children:"> "}),e.jsx("span",{className:"text-emerald-500 dark:text-sky-400",children:"dft-suite run"}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ","--job_type relax"]}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ","--struct Si.vasp"]}),e.jsx("br",{}),e.jsx("span",{className:"text-gray-500 dark:text-slate-500",children:"Initializing calculation for Si.vasp..."}),e.jsx("br",{}),e.jsx("span",{className:"text-gray-500 dark:text-slate-500",children:"Input files generated."}),e.jsx("br",{}),e.jsxs("span",{className:"text-gray-500 dark:text-slate-500",children:["Submitting job to SLURM ID:"," "]}),e.jsx("span",{className:"text-green-500 dark:text-green-400",children:"12345"}),e.jsx("br",{}),e.jsx("span",{className:"text-gray-500 dark:text-slate-500",children:"Monitoring status... Job completed successfully."}),e.jsx("br",{}),e.jsxs("span",{className:"text-gray-500 dark:text-slate-500",children:["Final energy:"," "]}),e.jsx("span",{className:"text-green-500 dark:text-green-400",children:"-5.42 eV/atom"})]}),tags:["Python","CLI","DFT","VASP","HPC","Automation","SLURM"],githubLink:"https://github.com/filipejunqueira/dft-suite"},{id:2,title:"SPM Data Analyzer",description:"Command-line utilities for processing and analyzing Scanning Probe Microscopy (SPM) data (AFM/STM). Features include drift correction, plane fitting, noise filtering, tip deconvolution, and basic statistical analysis of surface features.",problemSolved:"Provides a consistent and scriptable way to perform common SPM data processing tasks, ensuring reproducibility and enabling batch processing of large datasets.",icon:x,codeExample:e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"text-slate-500 dark:text-slate-400",children:"> "}),e.jsx("span",{className:"text-emerald-500 dark:text-sky-400",children:"spm-analyzer process"}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ","--file afm_scan.xyz"]}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ","--drift_correct --plane_fit"]}),e.jsx("br",{}),e.jsx("span",{className:"text-gray-500 dark:text-slate-500",children:"Processing scan data: afm_scan.xyz"}),e.jsx("br",{}),e.jsx("span",{className:"text-gray-500 dark:text-slate-500",children:"Applying 2D polynomial drift correction..."}),e.jsx("br",{}),e.jsx("span",{className:"text-gray-500 dark:text-slate-500",children:"Performing plane fitting (order 1)..."}),e.jsx("br",{}),e.jsx("span",{className:"text-green-500 dark:text-green-400",children:"Drift corrected. RMS roughness: 0.15 nm"}),e.jsx("br",{}),e.jsx("span",{className:"text-gray-500 dark:text-slate-500",children:"Saving processed_afm_scan.dat"})]}),tags:["Python","CLI","SPM","AFM","STM","Data Analysis","Nanoscience"],githubLink:"https://github.com/filipejunqueira/spm-analyzer"},{id:3,title:"Quick Plotter CLI",description:"A rapid plotting tool for generating publication-quality graphs from CSV or text files directly from the terminal. Supports various plot types, custom labels, legends, and output formats, powered by Matplotlib.",problemSolved:"Eliminates the need to write repetitive plotting scripts for common data visualization tasks, allowing for quick insights and figure generation from the command line.",icon:m,codeExample:e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"text-slate-500 dark:text-slate-400",children:"> "}),e.jsx("span",{className:"text-emerald-500 dark:text-sky-400",children:"quickplot"}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ","--file results.csv"]}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ",'--x_col "Voltage"']}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ",'--y_col "Current"']}),e.jsx("span",{children:" \\"}),e.jsx("br",{}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ",'-t "I-V Curve for Device X"']}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ",'--xlabel "Voltage (V)"']}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ",'--ylabel "Current (nA)"']}),e.jsxs("span",{className:"text-yellow-500 dark:text-yellow-400",children:[" ","--save plot.png"]}),e.jsx("br",{}),e.jsx("span",{className:"text-gray-500 dark:text-slate-500",children:"Generating plot 'I-V Curve for Device X'..."}),e.jsx("br",{}),e.jsx("span",{className:"text-green-500 dark:text-green-400",children:"Saved to plot_Voltage_vs_Current.png"})]}),tags:["Python","CLI","Plotting","Matplotlib","Data Viz","Automation"],githubLink:"https://github.com/filipejunqueira/quickplot"}],i={hidden:{opacity:0,y:30},visible:a=>({opacity:1,y:0,transition:{delay:a*.12,duration:.5,ease:"easeInOut"}}),hover:{y:-6,scale:1.02,boxShadow:"0px 8px 20px rgba(16, 185, 129, 0.12)"}};return e.jsxs(u,{title:"CLI Tools & Scripts",icon:c,id:"cli",children:[e.jsx(s,{as:"p",className:"text-center text-base md:text-lg mb-12 md:mb-16 max-w-2xl mx-auto leading-relaxed",children:"Crafting efficient command-line interfaces to accelerate research and automate complex tasks in nanoscience and data analysis. These tools are designed for robustness and ease of use."}),e.jsx("div",{className:"grid md:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-10",children:r.map((a,n)=>{const o=a.icon;return e.jsx(l.div,{variants:i,initial:"hidden",whileInView:"visible",whileHover:"hover",viewport:{once:!0,amount:.1},custom:n,children:e.jsxs(h,{className:"h-full flex flex-col cursor-default border dark:border-slate-700 transition-all duration-300",as:"article","aria-labelledby":`cli-tool-title-${a.id}`,children:[e.jsxs("div",{className:"flex items-center text-emerald-600 dark:text-emerald-400 mb-4",children:[e.jsx(o,{className:"h-9 w-9 mr-3.5 stroke-[1.75] flex-shrink-0","aria-hidden":"true"}),e.jsx("h3",{id:`cli-tool-title-${a.id}`,className:"text-lg lg:text-xl font-medium text-emerald-800 dark:text-emerald-300",children:a.title})]}),e.jsx(s,{as:"p",className:"text-sm mb-3 leading-relaxed",children:a.description}),a.problemSolved&&e.jsxs("p",{className:"text-emerald-700/80 dark:text-emerald-400/80 text-xs italic mt-1 mb-4",children:[e.jsx("span",{className:"font-semibold",children:"Impact: "}),a.problemSolved]}),e.jsx("div",{className:"mb-5 flex flex-wrap gap-2",children:a.tags.map(t=>e.jsx(g,{variant:"default",children:t},t))}),a.codeExample&&e.jsx(y,{className:"mb-5",children:a.codeExample}),e.jsx(l.div,{className:"mt-auto",whileHover:{scale:1.03,transition:{type:"spring",stiffness:300,damping:10}},whileTap:{scale:.97},children:e.jsxs(f,{as:"a",href:a.githubLink||"https://github.com/filipejunqueira",target:"_blank",rel:"noopener noreferrer",variant:"primary",className:"w-full gap-2 text-sm uppercase tracking-wider shadow-sm hover:shadow-md",children:[e.jsx(p,{size:18,"aria-hidden":"true"})," View on GitHub"]})})]})},a.id)})})]})};export{v as default};
