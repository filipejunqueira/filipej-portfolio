{"version":3,"file":"ContactSection-ClPs0K-q.js","sources":["../../src/HoverFlipButton.jsx","../../src/ContactSection.jsx"],"sourcesContent":["// HoverFlipButton.jsx\n// Import React and useState hook.\nimport React, { useState } from \"react\";\n\n/**\n * HoverFlipButton Component: A reusable button with a text/icon flip animation.\n * @param {object} props - Component props.\n * @param {string} props.href - URL the button links to.\n * @param {React.ElementType} props.IconInitial - Lucide icon for initial state.\n * @param {string} props.textInitial - Text for initial state.\n * @param {string} props.textHover - Text for hover state.\n * @param {string} props.bgColorInitial - Tailwind CSS bg color for initial state.\n * @param {string} props.bgColorHover - Tailwind CSS bg color for hover state.\n * @param {boolean} [props.isExternal=true] - If true, opens link in new tab.\n * @param {string} props.ariaLabel - ARIA label for accessibility.\n */\nconst HoverFlipButton = ({\n  href,\n  IconInitial,\n  textInitial,\n  textHover,\n  bgColorInitial,\n  bgColorHover,\n  isExternal = true,\n  ariaLabel,\n}) => {\n  // State to track hover status.\n  const [isHovered, setIsHovered] = useState(false);\n  return (\n    <a\n      href={href}\n      target={isExternal ? \"_blank\" : \"_self\"}\n      rel={isExternal ? \"noopener noreferrer\" : \"\"}\n      className={`flex items-center justify-center font-medium py-2.5 px-5 rounded-md text-white transition-all duration-300 ease-in-out shadow-md hover:shadow-lg transform hover:scale-105 w-full sm:w-auto min-h-[48px] text-sm uppercase tracking-wider focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white/80 ${bgColorInitial} ${bgColorHover}`}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      aria-label={ariaLabel || textInitial}\n    >\n      <div className=\"relative w-full text-center overflow-hidden h-5\">\n        <span\n          className={`absolute inset-0 flex items-center justify-center transition-all duration-300 ease-in-out ${isHovered ? \"opacity-0 -translate-y-full\" : \"opacity-100 translate-y-0\"}`}\n          aria-hidden={isHovered}\n        >\n          {IconInitial && (\n            <IconInitial\n              size={18}\n              className=\"mr-2 flex-shrink-0\"\n              aria-hidden=\"true\"\n            />\n          )}{\" \"}\n          <span className=\"truncate\">{textInitial}</span>\n        </span>\n        <span\n          className={`absolute inset-0 flex items-center justify-center transition-all duration-300 ease-in-out ${isHovered ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-full\"}`}\n          aria-hidden={!isHovered}\n        >\n          <span className=\"truncate\">{textHover}</span>\n        </span>\n      </div>\n    </a>\n  );\n};\n\nexport default HoverFlipButton;\n","// ContactSection.jsx\n// Import React, hooks, motion, Section, AnimatedSection, HoverFlipButton, UI components, and Lucide icons.\nimport React from \"react\"; // Removed useState as Formspree handles state\nimport { motion } from \"framer-motion\";\nimport Section from \"./Section\";\nimport AnimatedSection from \"./AnimatedSection\";\nimport HoverFlipButton from \"./HoverFlipButton\";\nimport { Card, Button, Input, Textarea, TextSecondary } from \"./components/UI\";\n// Import centralized animations\nimport { defaultVariants } from \"./animations\";\nimport {\n  Users,\n  Linkedin,\n  Github,\n  Twitter,\n  Send,\n  Loader2, // Kept if you want a custom loading state on the button, Formspree handles its own\n} from \"lucide-react\";\n// Import Formspree hooks\nimport { useForm, ValidationError } from \"@formspree/react\";\n\n/**\n * ContactSection Component: Displays contact information and Formspree form.\n */\nconst ContactSection = () => {\n  // Initialize Formspree's useForm hook with your form ID\n  const [state, handleSubmit] = useForm(\"xwpbkqew\"); // Your Formspree form ID\n\n  // Social contact buttons data (remains the same)\n  const socialContactButtons = [\n    {\n      href: \"https://linkedin.com/in/filipejunqueira\",\n      IconInitial: Linkedin,\n      textInitial: \"LinkedIn\",\n      textHover: \"View Profile\",\n      bgColorInitial: \"bg-sky-600 dark:bg-sky-700\",\n      bgColorHover: \"hover:bg-sky-700 dark:hover:bg-sky-800\",\n      ariaLabel: \"Filipe Junqueira on LinkedIn\",\n    },\n    {\n      href: \"https://github.com/filipejunqueira\",\n      IconInitial: Github,\n      textInitial: \"GitHub\",\n      textHover: \"View Repos\",\n      bgColorInitial: \"bg-gray-700 dark:bg-slate-700\",\n      bgColorHover: \"hover:bg-gray-800 dark:hover:bg-slate-600\",\n      ariaLabel: \"Filipe Junqueira on GitHub\",\n    },\n    {\n      href: \"https://x.com/CaptBroccoli\",\n      IconInitial: Twitter,\n      textInitial: \"Twitter / X\",\n      textHover: \"@CaptBroccoli\",\n      bgColorInitial: \"bg-sky-500 dark:bg-sky-600\",\n      bgColorHover: \"hover:bg-sky-600 dark:hover:bg-sky-700\",\n      ariaLabel: \"Filipe Junqueira (Captain Broccoli) on Twitter/X\",\n    },\n  ];\n\n  return (\n    <Section title=\"Get In Touch\" icon={Users} id=\"contact\">\n      <TextSecondary \n        as=\"p\" \n        className=\"text-center text-base md:text-lg mb-10 md:mb-12 max-w-xl mx-auto leading-relaxed\"\n      >\n        I'm always open to discussing new projects, collaborations, or just\n        connecting with like-minded individuals. Send me a message using the\n        form below, or connect via social media!\n      </TextSecondary>\n\n      <motion.div\n        className=\"max-w-xl mx-auto mb-12\"\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={defaultVariants}\n        transition={{ duration: 0.5, delay: 0.1 }}\n      >\n        <Card className=\"p-6 sm:p-8\">\n        {/* Display thank you message on successful submission */}\n        {state.succeeded ? (\n          <p className=\"text-center text-lg font-medium text-green-600 dark:text-green-400 py-10\">\n            Thanks for your message! I'll get back to you soon. ðŸ˜Š\n          </p>\n        ) : (\n          // Otherwise, display the form\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div>\n              <label\n                htmlFor=\"name\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-slate-300 mb-1\"\n              >\n                Full Name\n              </label>\n              <Input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\" // Formspree uses this name attribute\n                required\n                placeholder=\"Your Name\"\n              />\n              <ValidationError\n                prefix=\"Name\"\n                field=\"name\"\n                errors={state.errors}\n                className=\"text-red-500 dark:text-red-400 text-xs mt-1\"\n              />\n            </div>\n            <div>\n              <label\n                htmlFor=\"email\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-slate-300 mb-1\"\n              >\n                Email Address\n              </label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                name=\"email\" // Formspree uses this name attribute\n                required\n                placeholder=\"you@example.com\"\n              />\n              <ValidationError\n                prefix=\"Email\"\n                field=\"email\"\n                errors={state.errors}\n                className=\"text-red-500 dark:text-red-400 text-xs mt-1\"\n              />\n            </div>\n            <div>\n              <label\n                htmlFor=\"message\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-slate-300 mb-1\"\n              >\n                Message\n              </label>\n              <Textarea\n                id=\"message\"\n                name=\"message\" // Formspree uses this name attribute\n                rows=\"4\"\n                required\n                placeholder=\"Your message...\"\n              />\n              <ValidationError\n                prefix=\"Message\"\n                field=\"message\"\n                errors={state.errors}\n                className=\"text-red-500 dark:text-red-400 text-xs mt-1\"\n              />\n            </div>\n            <div>\n              <Button\n                type=\"submit\"\n                disabled={state.submitting} // Disable button while submitting\n                variant=\"primary\"\n                className=\"w-full gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {state.submitting ? (\n                  <>\n                    <Loader2 size={20} className=\"animate-spin\" />\n                    Sending...\n                  </>\n                ) : (\n                  <>\n                    <Send size={18} />\n                    Send Message\n                  </>\n                )}\n              </Button>\n              {/* Display general submission errors not tied to a specific field */}\n              {state.errors &&\n                !state.errors.getAllerrors &&\n                state.errors.getFormErrors().length > 0 && (\n                  <p className=\"text-red-500 dark:text-red-400 text-sm mt-2 text-center\">\n                    Oops! There was a problem submitting your form. Please try\n                    again.\n                  </p>\n                )}\n            </div>\n          </form>\n        )}\n        </Card>\n      </motion.div>\n\n      {/* Social Contact Buttons Grid (remains the same) */}\n      <TextSecondary as=\"p\" className=\"text-center text-base mb-6 md:mb-8\">\n        Or connect with me on social media:\n      </TextSecondary>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 md:gap-6 max-w-3xl mx-auto\">\n        {socialContactButtons.map((button, index) => (\n          <AnimatedSection key={index} delay={index * 0.1} threshold={0.1}>\n            <HoverFlipButton {...button} />\n          </AnimatedSection>\n        ))}\n      </div>\n    </Section>\n  );\n};\n\nexport default ContactSection;\n"],"names":["HoverFlipButton","href","IconInitial","textInitial","textHover","bgColorInitial","bgColorHover","isExternal","ariaLabel","isHovered","setIsHovered","useState","jsx","jsxs","ContactSection","state","handleSubmit","useForm","socialContactButtons","Linkedin","Github","Twitter","Section","Users","TextSecondary","motion","defaultVariants","Card","Input","ValidationError","Textarea","Button","Fragment","Loader2","Send","button","index","AnimatedSection"],"mappings":"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"}