// This line imports the 'React' library and some specific tools from it.
// 'useState', 'useEffect', and 'useCallback' are "Hooks" â€“ special functions that let you use React features in function components.
import React, { useState, useEffect, useCallback } from "react";

// These lines import the necessary functions from 'framer-motion' and 'react-intersection-observer'.
// 'motion' is used to create animated HTML elements.
// 'useAnimation' allows you to control animations manually.
// 'useInView' is a hook that detects when an element is visible in the viewport.
import { motion, useAnimation } from "framer-motion";
import { useInView } from "react-intersection-observer";

// This line imports various icon components from the 'lucide-react' library.
// Each name (Briefcase, Code, etc.) is an icon. 'Image as ImageIcon' renames 'Image' to 'ImageIcon' to avoid naming conflicts.
import {
  Briefcase,
  Code,
  Cpu,
  Linkedin,
  Github,
  Mail,
  ExternalLink,
  ChevronDown,
  ChevronUp,
  Box,
  ArrowLeftCircle,
  ArrowRightCircle,
  Image as ImageIcon,
  BookOpen,
  Award,
  Palette,
  Anchor,
  Brain,
  Music,
  Coffee,
  Users,
  Building,
  GraduationCap,
  FlaskConical,
  Sparkles,
  Loader2,
  AlertTriangle,
  UserCircle,
} from "lucide-react";

// Import your profile picture
// Make sure the path is correct. If 'assets' is in 'src', this should work.
import profilePic from "./assets/captainbroccoli.png";

// Import your CV PDF file from the assets folder
import filipeCv from "./assets/filipecv.pdf";

// --- AnimatedSection Component ---
// This component wraps its children, applying animations when it scrolls into view.

// Default animation variants:
// 'hidden': defines the state of the component before it animates (opacity 0, slightly moved down).
// 'visible': defines the state of the component after it animates (opacity 1, at its original y-position).
const defaultVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: { opacity: 1, y: 0 },
};

/**
 * AnimatedSection Component
 * Wraps content to animate it when it scrolls into view.
 *
 * @param {React.ReactNode} children - The content to be animated.
 * @param {string} [className=""] - Optional additional CSS classes for the section.
 * @param {string} [id] - Optional HTML ID for the section.
 * @param {object} [variants=defaultVariants] - Animation variants for hidden and visible states.
 * @param {number} [delay=0] - Delay in seconds before the animation starts.
 * @param {number} [threshold=0.1] - Percentage of the element that needs to be in view to trigger the animation.
 */
const AnimatedSection = ({
  children,
  className = "",
  id,
  variants = defaultVariants,
  delay = 0,
  threshold = 0.1,
}) => {
  // 'useAnimation' hook from framer-motion to control the animation sequence.
  const controls = useAnimation();

  // 'useInView' hook to track if the component is in the viewport.
  // 'ref' is attached to the element we want to observe.
  // 'inView' is a boolean indicating if the element is in view.
  // 'triggerOnce: true' ensures the animation only runs once.
  const [ref, inView] = useInView({
    triggerOnce: true,
    threshold: threshold,
  });

  // 'useEffect' hook to start the animation when the component comes into view.
  // This effect runs when 'controls' or 'inView' changes.
  useEffect(() => {
    // If the component is in view, start the 'visible' animation.
    if (inView) {
      controls.start("visible");
    }
  }, [controls, inView]); // Dependencies for the effect.

  // The 'motion.div' component from framer-motion is used here.
  // It's like a regular <div> tag but with animation capabilities.
  return (
    <motion.div
      ref={ref} // Assign the ref from useInView to this element.
      id={id}
      className={className}
      initial="hidden" // Set the initial animation state.
      animate={controls} // Control the animation using the 'controls' object.
      variants={variants} // Provide the animation variants (hidden and visible states).
      transition={{ duration: 0.6, delay }} // Define the transition properties (duration and delay).
    >
      {children} {/* Render the content passed to this component. */}
    </motion.div>
  );
};

// --- Reusable Helper Components ---

/**
 * Section Component
 * This is a reusable component that creates a styled section on the page.
 * It takes 'title', 'icon', 'children', and 'id' as "props" (properties/settings).
 */
const Section = ({ title, icon: IconComponent, children, id }) => (
  <section
    id={id}
    className="py-12 md:py-16 bg-white rounded-xl shadow-lg mb-8 md:mb-12 px-6 md:px-10"
  >
    <div className="container mx-auto">
      <h2 className="text-3xl md:text-4xl font-bold text-emerald-700 mb-8 md:mb-12 text-center flex items-center justify-center">
        {IconComponent && (
          <IconComponent className="w-8 h-8 md:w-10 md:h-10 mr-3 text-emerald-500" />
        )}
        {title}
      </h2>
      {children}
    </div>
  </section>
);

/**
 * ProjectCard Component
 * This component displays a card for a single project.
 */
const ProjectCard = ({
  title,
  description,
  imagePlaceholderColor,
  images,
  link,
  type,
  isGalleryOpen,
  onToggleGallery,
}) => {
  const [isDescriptionExpanded, setIsDescriptionExpanded] = useState(false);
  const [currentImageIndex, setCurrentImageIndex] = useState(0);

  const toggleDescription = () => {
    setIsDescriptionExpanded(!isDescriptionExpanded);
  };

  const nextImage = (e) => {
    e.stopPropagation();
    if (images && images.length > 0) {
      setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);
    }
  };

  const prevImage = (e) => {
    e.stopPropagation();
    if (images && images.length > 0) {
      setCurrentImageIndex(
        (prevIndex) => (prevIndex - 1 + images.length) % images.length,
      );
    }
  };

  useEffect(() => {
    if (type === "blender" && !isGalleryOpen) {
      setCurrentImageIndex(0);
    }
  }, [isGalleryOpen, type]);

  return (
    <div className="bg-emerald-50 p-6 rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 flex flex-col h-full">
      <div
        className={`w-full h-48 md:h-56 rounded-md flex items-center justify-center text-white text-xl font-semibold mb-4 ${imagePlaceholderColor}`}
      >
        {type === "blender" ? <Palette size={48} /> : <Code size={48} />}
      </div>
      <h3 className="text-xl md:text-2xl font-semibold text-emerald-800 mb-2">
        {title}
      </h3>
      <div className="flex-grow">
        <p
          className={`text-emerald-600 mb-4 ${isDescriptionExpanded ? "" : "line-clamp-3"}`}
        >
          {description}
        </p>
      </div>
      {description.length > 100 && (
        <button
          onClick={toggleDescription}
          className="text-emerald-500 hover:text-emerald-700 flex items-center mb-3 text-sm self-start"
        >
          {isDescriptionExpanded ? "Show Less" : "Show More"}
          {isDescriptionExpanded ? (
            <ChevronUp size={16} className="ml-1" />
          ) : (
            <ChevronDown size={16} className="ml-1" />
          )}
        </button>
      )}

      <div className="mt-auto">
        {type === "blender" &&
          images &&
          images.length > 0 &&
          onToggleGallery && (
            <button
              onClick={onToggleGallery}
              className="inline-flex items-center text-emerald-500 hover:text-emerald-700 font-medium transition-colors duration-300 self-start mr-4"
            >
              {isGalleryOpen ? "Hide Images" : "View Images"}
              {isGalleryOpen ? (
                <ChevronUp size={18} className="ml-2" />
              ) : (
                <ImageIcon size={18} className="ml-2" />
              )}
            </button>
          )}
        {type === "cli" && link && (
          <a
            href={link}
            target="_blank"
            rel="noopener noreferrer"
            className="inline-flex items-center text-emerald-500 hover:text-emerald-700 font-medium transition-colors duration-300 self-start"
          >
            View on GitHub <Github size={18} className="ml-2" />
          </a>
        )}
      </div>

      {type === "blender" && isGalleryOpen && images && images.length > 0 && (
        <div className="mt-4 pt-4 border-t border-emerald-200">
          <div className="relative mb-2">
            <div
              className={`w-full h-56 md:h-72 rounded-md flex items-center justify-center text-white text-xl font-semibold ${images[currentImageIndex]} shadow-inner`}
            >
              Image {currentImageIndex + 1} <br /> (Placeholder:{" "}
              {images[currentImageIndex]})
            </div>
            {images.length > 1 && (
              <>
                <button
                  onClick={prevImage}
                  className="absolute left-1 top-1/2 -translate-y-1/2 bg-black bg-opacity-40 text-white p-1.5 rounded-full hover:bg-opacity-60 transition-opacity"
                  aria-label="Previous Image"
                >
                  <ArrowLeftCircle size={20} />
                </button>
                <button
                  onClick={nextImage}
                  className="absolute right-1 top-1/2 -translate-y-1/2 bg-black bg-opacity-40 text-white p-1.5 rounded-full hover:bg-opacity-60 transition-opacity"
                  aria-label="Next Image"
                >
                  <ArrowRightCircle size={20} />
                </button>
              </>
            )}
          </div>
          {images.length > 1 && (
            <p className="text-center text-xs text-emerald-500">
              Image {currentImageIndex + 1} of {images.length}
            </p>
          )}
        </div>
      )}
    </div>
  );
};

// --- Page Sections ---

/**
 * Navbar Component
 * Creates the sticky navigation bar with animated links.
 */
const Navbar = ({ setActiveSection }) => {
  const [isOpen, setIsOpen] = useState(false);

  const navLinks = [
    { id: "home", label: "Home" },
    { id: "scientist", label: "Career & Education" },
    { id: "publications", label: "Publications" },
    { id: "blender", label: "Blender Art" },
    { id: "cli", label: "CLI Tools" },
    { id: "contact", label: "Contact" },
  ];

  // Subtler wiggle animation for navbar links on hover
  const navLinkHoverAnimation = {
    rotate: [0, -1.5, 1.5, -1.5, 1.5, 0], // Reduced rotation
    scale: 1.03, // Slightly reduced scale
    transition: { duration: 0.35, ease: "easeInOut" },
  };
  // Subtler wiggle animation for the brand/name link
  const brandHoverAnimation = {
    scale: [1, 1.02, 1, 1.02, 1], // Reduced scale
    color: ["#FFFFFF", "#A7F3D0", "#FFFFFF"],
    transition: { duration: 0.5, ease: "easeInOut" },
  };

  return (
    <nav className="bg-emerald-600 text-white sticky top-0 z-50 shadow-md">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-16">
          <div className="flex items-center">
            <motion.img
              src={profilePic}
              alt="Filipe L. Q. Junqueira"
              className="w-10 h-10 rounded-full mr-3 object-cover shadow-inner"
              whileHover={{ scale: 1.1, rotate: 5 }} // Reduced scale and rotate
              transition={{ type: "spring", stiffness: 300 }}
            />
            <motion.a
              href="#home"
              onClick={() => setActiveSection("home")}
              className="flex-shrink-0 text-xl md:text-2xl font-bold"
              whileHover={brandHoverAnimation}
            >
              Filipe L. Q. Junqueira
            </motion.a>
          </div>
          <div className="hidden md:block">
            <div className="ml-10 flex items-baseline space-x-1">
              {navLinks.map((link) => (
                <motion.a
                  key={link.id}
                  href={`#${link.id}`}
                  onClick={() => {
                    setActiveSection(link.id);
                    setIsOpen(false);
                  }}
                  className="hover:bg-emerald-500 px-3 py-2 rounded-md text-sm font-medium transition-colors"
                  whileHover={navLinkHoverAnimation}
                >
                  {link.label}
                </motion.a>
              ))}
            </div>
          </div>
          <div className="-mr-2 flex md:hidden">
            <button
              onClick={() => setIsOpen(!isOpen)}
              type="button"
              className="bg-emerald-700 inline-flex items-center justify-center p-2 rounded-md text-emerald-300 hover:text-white hover:bg-emerald-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-emerald-700 focus:ring-white"
              aria-controls="mobile-menu"
              aria-expanded={isOpen}
            >
              <span className="sr-only">Open main menu</span>
              {!isOpen ? (
                <svg
                  className="block h-6 w-6"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  aria-hidden="true"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth="2"
                    d="M4 6h16M4 12h16M4 18h16"
                  />
                </svg>
              ) : (
                <svg
                  className="block h-6 w-6"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  aria-hidden="true"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth="2"
                    d="M6 18L18 6M6 6l12 12"
                  />
                </svg>
              )}
            </button>
          </div>
        </div>
      </div>

      {isOpen && (
        <div className="md:hidden" id="mobile-menu">
          <div className="px-2 pt-2 pb-3 space-y-1 sm:px-3">
            {navLinks.map((link) => (
              <motion.a
                key={link.id}
                href={`#${link.id}`}
                onClick={() => {
                  setActiveSection(link.id);
                  setIsOpen(false);
                }}
                className="hover:bg-emerald-500 block px-3 py-2 rounded-md text-base font-medium transition-colors"
                whileHover={navLinkHoverAnimation}
              >
                {link.label}
              </motion.a>
            ))}
          </div>
        </div>
      )}
    </nav>
  );
};

/**
 * HeroSection Component
 * The main introductory section with entry animations on its elements.
 * The "View Full CV" button now links to the imported PDF.
 */
const HeroSection = () => (
  <section
    id="home"
    className="bg-gradient-to-br from-emerald-400 to-teal-500 text-white py-20 md:py-32"
  >
    <div className="container mx-auto text-center px-6 flex flex-col items-center">
      <motion.img
        src={profilePic}
        alt="Filipe L. Q. Junqueira profile"
        className="w-32 h-32 md:w-40 md:h-40 rounded-full object-cover mb-6 shadow-lg border-4 border-white"
        initial={{ opacity: 0, scale: 0.5 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{
          duration: 0.5,
          delay: 0.2,
          type: "spring",
          stiffness: 120,
        }}
      />
      <motion.h1
        className="text-4xl sm:text-5xl md:text-6xl font-bold mb-6"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.4 }}
      >
        Filipe L. Q. Junqueira
      </motion.h1>
      <motion.p
        className="text-lg sm:text-xl md:text-2xl mb-4 text-emerald-100 opacity-95"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.6 }}
      >
        Research Associate, School of Physics and Astronomy, University of
        Nottingham
      </motion.p>
      <motion.p
        className="text-md sm:text-lg md:text-xl mb-8 text-emerald-200 max-w-3xl mx-auto"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.8 }}
      >
        Exploring 3D printing with atoms, NC-AFM & STM studies, DFT, and Machine
        Learning in nanoscience.
      </motion.p>
      {/* "View Full CV" button now links to the imported filipeCv PDF */}
      <motion.a
        href={filipeCv} // Use the imported PDF path here
        target="_blank" // Opens the PDF in a new tab
        rel="noopener noreferrer" // Security measure for new tabs
        className="bg-white text-emerald-600 font-bold py-3 px-8 rounded-lg text-lg hover:bg-emerald-50 transition-colors duration-300 shadow-lg hover:shadow-xl"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 1.0 }}
        whileHover={{
          scale: 1.05,
          rotate: [0, -1, 1, -1, 1, 0],
          boxShadow: "0px 0px 15px rgba(255,255,255,0.5)",
          transition: { rotate: { duration: 0.3, ease: "easeInOut" } },
        }}
      >
        View Full CV
      </motion.a>
    </div>
  </section>
);

/**
 * BlenderCreations Component
 * Showcases Blender projects with staggered card animations.
 */
const BlenderCreations = () => {
  const [expandedGalleryId, setExpandedGalleryId] = useState(null);
  const blenderProjects = [
    {
      id: 1,
      title: "Abstract 3D Art",
      description:
        "Exploring forms, textures, and lighting using Blender for creating visually compelling abstract scenes. This involves procedural texturing and complex node setups.",
      images: ["bg-sky-500", "bg-sky-600", "bg-sky-700"],
      cardVisual: "bg-sky-400",
    },
    {
      id: 2,
      title: "Scientific Visualization",
      description:
        "Using Blender to create visualizations for complex scientific concepts, such as molecular structures or physical phenomena, making them accessible and understandable.",
      images: ["bg-orange-500", "bg-orange-600"],
      cardVisual: "bg-orange-400",
    },
    {
      id: 3,
      title: "Character/Concept Design",
      description:
        "Developing unique characters and concepts in 3D, from initial sculpting to final texturing and rigging for animation or static renders.",
      images: [
        "bg-purple-500",
        "bg-purple-600",
        "bg-purple-700",
        "bg-purple-800",
      ],
      cardVisual: "bg-purple-400",
    },
  ];

  const handleToggleGallery = (projectId) => {
    setExpandedGalleryId((prevId) => (prevId === projectId ? null : projectId));
  };

  return (
    <Section title="Blender Art & 3D Visualization" icon={Palette} id="blender">
      <p className="text-center text-lg text-emerald-600 mb-10 md:mb-12 max-w-2xl mx-auto">
        Leveraging Blender for creative 3D projects and scientific
        visualization. Each piece is a journey into form, light, and narrative.
      </p>
      <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-10">
        {blenderProjects.map((project, index) => (
          <AnimatedSection
            key={project.id}
            delay={index * 0.15}
            threshold={0.1}
          >
            <ProjectCard
              title={project.title}
              description={project.description}
              imagePlaceholderColor={project.cardVisual}
              images={project.images}
              type="blender"
              isGalleryOpen={expandedGalleryId === project.id}
              onToggleGallery={() => handleToggleGallery(project.id)}
            />
          </AnimatedSection>
        ))}
      </div>
      <p className="text-center text-md text-emerald-500 mt-10 md:mt-12">
        More creations and visualizations coming soon! Stay tuned for updates.
      </p>
    </Section>
  );
};

/**
 * CLIPrograms Component
 * Showcases CLI tools with staggered card animations.
 */
const CLIPrograms = () => {
  const cliProjects = [
    {
      id: 1,
      title: "DFT & Simulation Scripts",
      description:
        "Custom Python and Bash scripts for automating Density Functional Theory (DFT) calculations and managing simulation workflows on high-performance computing clusters.",
      imagePlaceholderColor: "bg-slate-500",
      githubLink: "https://github.com/filipejunqueira",
    },
    {
      id: 2,
      title: "Machine Learning Utilities",
      description:
        "Command-line tools for preprocessing data, training machine learning models, and evaluating their performance, tailored for scientific datasets.",
      imagePlaceholderColor: "bg-gray-500",
      githubLink: "https://github.com/filipejunqueira",
    },
    {
      id: 3,
      title: "Data Analysis & Plotting Tools",
      description:
        "CLI tools for quick data analysis, statistical summaries, and generating publication-quality plots directly from the terminal using libraries like Matplotlib and Seaborn.",
      imagePlaceholderColor: "bg-stone-500",
      githubLink: "https://github.com/filipejunqueira",
    },
  ];

  return (
    <Section title="CLI Tools & Scripts" icon={Cpu} id="cli">
      <p className="text-center text-lg text-emerald-600 mb-10 md:mb-12 max-w-2xl mx-auto">
        Developing efficient command-line tools using Python, Bash, and various
        data science libraries to streamline research workflows and enhance
        productivity.
      </p>
      <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-10">
        {cliProjects.map((project, index) => (
          <AnimatedSection
            key={project.id}
            delay={index * 0.15}
            threshold={0.1}
          >
            <ProjectCard
              title={project.title}
              description={project.description}
              imagePlaceholderColor={project.imagePlaceholderColor}
              link={project.githubLink}
              type="cli"
            />
          </AnimatedSection>
        ))}
      </div>
      {/* Removed the redundant GitHub profile link text from here */}
    </Section>
  );
};

/**
 * ScientistCareer Component
 * Details career and education milestones with staggered animations and animated expand/collapse.
 * Removed the duplicate "Download Full CV" button.
 */
const ScientistCareer = () => {
  const [expandedDetailId, setExpandedDetailId] = useState(null);
  const careerMilestones = [
    {
      id: 1,
      role: "Post-doctoral Researcher",
      institution: "University of Nottingham, UK",
      duration: "Jan 2022 - Present",
      description:
        "Research associate with Prof. Philip Moriarty's nanoscience group, focusing on atomic manipulation and machine learning applications in SPM.",
      icon: FlaskConical,
      moreDetails:
        "Key responsibilities include designing and conducting experiments using NC-AFM/STM, developing Python scripts for data analysis and instrument control, and mentoring PhD students. Currently investigating novel methods for 3D atomic assembly and applying deep learning for real-time image recognition in microscopy.",
    },
    {
      id: 2,
      role: "Physics PhD Researcher",
      institution: "University of Nottingham & King's College London, UK",
      duration: "2016-2019, 2022-Present (Expected Submission: Mid 2025)",
      description:
        "Thesis: 'Towards 3D printing with atoms: Integrating machine learning with scanning probe microscopy for automated atomic assembly.'",
      icon: GraduationCap,
      moreDetails:
        "My PhD research explores the intersection of nanoscience and artificial intelligence. This involves extensive work with ultra-high vacuum (UHV) systems, DFT simulations to understand atomic interactions, and the development of bespoke machine learning models to guide the AFM tip for precise atomic manipulation.",
    },
    {
      id: 3,
      role: "Intelligence Analyst",
      institution: "Cortex-Intelligence, SÃ£o Paulo, Brazil",
      duration: "Feb 2015 - Jul 2015",
      description:
        "Analysed big data for clients in various sectors, providing actionable insights through statistical modeling and data visualization.",
      icon: Brain,
      moreDetails:
        "Utilized R and Python for data mining and predictive analytics. Developed custom dashboards for clients to monitor KPIs and trends. Projects included market segmentation analysis, customer churn prediction, and sales forecasting.",
    },
    {
      id: 4,
      role: "Partner - Real Estate Project",
      institution: "Family Business, SÃ£o Paulo, Brazil",
      duration: "Jun 2013 - Dec 2014",
      description:
        "Responsible for financial analysis, project viability assessment, and investor relations for a residential development project.",
      icon: Building,
      moreDetails:
        "Managed budgets, conducted market research to inform pricing strategies, and prepared financial reports for stakeholders. Successfully secured partial funding through presentations to private investors.",
    },
    {
      id: 5,
      role: "Investment and Intelligence Analyst",
      institution: "BR Properties S.A., SÃ£o Paulo, Brazil",
      duration: "Feb 2011 - May 2013",
      description:
        "Financial viability analysis for commercial real estate acquisitions and development. Contributed to the creation of the intelligence department.",
      icon: Briefcase,
      moreDetails:
        "Developed complex financial models (DCF, IRR) for property valuation. Conducted due diligence on potential investments. Played a key role in establishing data collection and market analysis protocols for the newly formed intelligence unit.",
    },
    {
      id: 6,
      role: "Engineering Degree - Civil/Electrical Emphasis",
      institution:
        "POLI (Polytechnic School of Engineering, University of SÃ£o Paulo), Brazil",
      duration: "Jan 2006 - Jun 2012",
      description:
        "Comprehensive 5-7 year engineering course with a strong foundation in mathematics, physics, and specialized engineering disciplines.",
      icon: GraduationCap,
      moreDetails:
        "Key modules included: Structural Analysis, Electromagnetism, Control Systems, Thermodynamics, and Fluid Mechanics. Final year project focused on sustainable urban infrastructure.",
    },
    {
      id: 7,
      role: "Science Internship - Naval Engineering",
      institution: "POLI-USP, SÃ£o Paulo, Brazil",
      duration: "Jan 2009 - Jan 2010",
      description:
        "Supervisor: Prof. Bernardo Luis Rodrigues de Andrade. Research on hydrofoil design and hydrodynamic efficiency.",
      icon: Anchor,
      moreDetails:
        "Involved computational fluid dynamics (CFD) simulations to optimize hydrofoil shapes for reduced drag and improved stability. Assisted in experimental testing in a water tunnel facility.",
    },
    {
      id: 8,
      role: "Science Internship - Mathematics",
      institution: "Math Department - USP, SÃ£o Paulo, Brazil",
      duration: "Jan 2007 - Jul 2009",
      description:
        "Supervisor: Prof. ElÃ³i Medina Galego. Studied advanced topics in abstract algebra and number theory.",
      icon: Brain,
      moreDetails:
        "Focused on Group Theory and Galois Theory. Participated in weekly seminars and worked on problem sets that extended beyond the standard undergraduate curriculum, fostering a deeper understanding of mathematical proofs and structures.",
    },
  ];

  const handleToggleDetail = (milestoneId) => {
    setExpandedDetailId((prevId) =>
      prevId === milestoneId ? null : milestoneId,
    );
  };

  return (
    <Section title="Career & Education" icon={Briefcase} id="scientist">
      <p className="text-center text-lg text-emerald-600 mb-10 md:mb-12 max-w-2xl mx-auto">
        A journey through academia and industry, driven by a passion for
        physics, data, and problem-solving. Each step has been a building block
        towards new discoveries.
      </p>
      <div className="space-y-8">
        {careerMilestones.map((milestone, index) => {
          const MilestoneIcon = milestone.icon;
          const isExpanded = expandedDetailId === milestone.id;
          return (
            <AnimatedSection
              key={milestone.id}
              delay={index * 0.1}
              threshold={0.05}
            >
              <div className="bg-emerald-50 p-6 rounded-lg shadow-md">
                <div className="flex flex-col sm:flex-row items-start">
                  <div className="flex-shrink-0 mb-4 sm:mb-0 sm:mr-6 pt-1">
                    {MilestoneIcon && (
                      <MilestoneIcon className="w-10 h-10 md:w-12 md:h-12 text-emerald-500" />
                    )}
                  </div>
                  <div className="flex-grow">
                    <h3 className="text-xl md:text-2xl font-semibold text-emerald-800">
                      {milestone.role}
                    </h3>
                    <p className="text-md text-emerald-700 font-medium">
                      {milestone.institution}
                    </p>
                    <p className="text-sm text-emerald-500 mb-2">
                      {milestone.duration}
                    </p>
                    <p className="text-emerald-600 leading-relaxed">
                      {milestone.description}
                    </p>
                    {milestone.moreDetails && (
                      <button
                        onClick={() => handleToggleDetail(milestone.id)}
                        className="mt-3 text-sm text-emerald-500 hover:text-emerald-700 font-semibold inline-flex items-center"
                      >
                        {isExpanded ? "Show Less" : "View More"}
                        {isExpanded ? (
                          <ChevronUp size={16} className="ml-1" />
                        ) : (
                          <ChevronDown size={16} className="ml-1" />
                        )}
                      </button>
                    )}
                  </div>
                </div>
                {isExpanded && milestone.moreDetails && (
                  <motion.div
                    initial={{ opacity: 0, height: 0 }}
                    animate={{ opacity: 1, height: "auto" }}
                    exit={{ opacity: 0, height: 0 }}
                    transition={{ duration: 0.3 }}
                    className="mt-4 pt-4 border-t border-emerald-200"
                  >
                    <p className="text-emerald-600 leading-relaxed text-sm whitespace-pre-line">
                      {milestone.moreDetails}
                    </p>
                  </motion.div>
                )}
              </div>
            </AnimatedSection>
          );
        })}
      </div>
      {/* The "Download Full CV" button that was here has been removed. */}
    </Section>
  );
};

/**
 * PublicationItem Component
 * Renders a single publication entry with AI explanation feature and animated expand/collapse.
 */
const PublicationItem = ({ pub }) => {
  const [summary, setSummary] = useState("");
  const [isLoadingSummary, setIsLoadingSummary] = useState(false);
  const [summaryError, setSummaryError] = useState("");
  const [showSummary, setShowSummary] = useState(false);

  const handleGenerateSummary = async () => {
    if (summary && !showSummary) {
      setShowSummary(true);
      return;
    }
    if (showSummary && summary) {
      setShowSummary(false);
      return;
    }

    setIsLoadingSummary(true);
    setSummaryError("");
    setSummary("");
    setShowSummary(true);

    const prompt = `Please provide a concise summary or explain the significance of the following scientific publication in 2-3 sentences, suitable for a general audience. Focus on the key findings or impact:
Title: "${pub.title}"
Authors: ${pub.authors}
Journal: ${pub.journal}
Year: ${pub.year}
${pub.note ? `Note: ${pub.note}` : ""}
What are the main takeaways or importance of this research?`;

    let chatHistory = [{ role: "user", parts: [{ text: prompt }] }];
    const payload = { contents: chatHistory };
    const apiKey = "";
    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

    try {
      const response = await fetch(apiUrl, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
      });

      if (!response.ok) {
        const errorData = await response.json();
        console.error("Gemini API Error:", errorData);
        throw new Error(
          `API request failed with status ${response.status}: ${errorData?.error?.message || "Unknown error"}`,
        );
      }
      const result = await response.json();
      if (
        result.candidates &&
        result.candidates.length > 0 &&
        result.candidates[0].content &&
        result.candidates[0].content.parts &&
        result.candidates[0].content.parts.length > 0
      ) {
        const text = result.candidates[0].content.parts[0].text;
        setSummary(text);
      } else {
        console.error("Unexpected API response structure:", result);
        throw new Error("Failed to extract summary from API response.");
      }
    } catch (error) {
      console.error("Error generating summary:", error);
      setSummaryError(
        error.message || "An error occurred while generating the summary.",
      );
    } finally {
      setIsLoadingSummary(false);
    }
  };

  return (
    <div className="bg-emerald-50 p-5 rounded-lg shadow-sm">
      <h3 className="text-lg md:text-xl font-semibold text-emerald-800 mb-1">
        {pub.title}
      </h3>
      <p className="text-sm text-emerald-600 italic mb-1 truncate-authors">
        {pub.authors}
      </p>
      <p className="text-sm text-emerald-700 mb-1">
        {pub.journal} ({pub.year})
      </p>
      {pub.note && <p className="text-xs text-emerald-500 mb-2">{pub.note}</p>}
      <div className="flex flex-wrap items-center space-x-4 mt-2">
        <a
          href={pub.link}
          target="_blank"
          rel="noopener noreferrer"
          className="text-sm text-emerald-500 hover:text-emerald-700 hover:underline font-medium inline-flex items-center mb-2 sm:mb-0"
        >
          View Publication <ExternalLink size={14} className="ml-1.5" />
        </a>
        <button
          onClick={handleGenerateSummary}
          disabled={isLoadingSummary}
          className="text-sm text-purple-600 hover:text-purple-800 font-medium inline-flex items-center disabled:opacity-50 disabled:cursor-not-allowed"
        >
          <Sparkles size={16} className="mr-1.5" />
          {isLoadingSummary
            ? "Thinking..."
            : showSummary && summary
              ? "Hide AI Explanation"
              : "âœ¨ Explain with AI"}
        </button>
      </div>

      {showSummary && (
        <motion.div
          initial={{ opacity: 0, height: 0 }}
          animate={{ opacity: 1, height: "auto" }}
          exit={{ opacity: 0, height: 0 }}
          transition={{ duration: 0.3 }}
          className="mt-3 pt-3 border-t border-emerald-200"
        >
          {isLoadingSummary && (
            <div className="flex items-center text-sm text-gray-500">
              <Loader2 size={18} className="animate-spin mr-2" />
              Generating explanation...
            </div>
          )}
          {summaryError && !isLoadingSummary && (
            <div className="flex items-start text-sm text-red-600 bg-red-50 p-3 rounded-md">
              <AlertTriangle size={18} className="mr-2 flex-shrink-0" />
              <div>
                <strong>Error:</strong> {summaryError}
                <p className="text-xs mt-1">
                  Please try again later. The AI might be busy or there was a
                  network issue.
                </p>
              </div>
            </div>
          )}
          {summary && !isLoadingSummary && !summaryError && (
            <div>
              <h4 className="text-sm font-semibold text-emerald-700 mb-1">
                AI Explanation:
              </h4>
              <p className="text-sm text-emerald-600 whitespace-pre-wrap">
                {summary}
              </p>
            </div>
          )}
        </motion.div>
      )}
    </div>
  );
};

/**
 * PublicationsSection Component
 * Lists scientific publications with staggered animations.
 */
const PublicationsSection = () => {
  const publications = [
    {
      id: 1,
      title:
        "Embedding human heuristics in machine-learning-enabled probe microscopy",
      authors: "Oliver M Gordon and Filipe LQ Junqueira and Philip J Moriarty.",
      journal: "MACHINE LEARNING: SCIENCE AND TECHNOLOGY-IOP PUBLISHING",
      year: "2020",
      doi: "10.1088/2632-2153/AB42EC",
      link: "https://doi.org/10.1088/2632-2153/AB42EC",
    },
    {
      id: 2,
      title:
        "Scanning tunneling state recognition with multi-class neural network ensembles",
      authors:
        "O. Gordon and P. D'Hondt and L. Knijff and S. E. Freeney and F. Junqueira and P. Moriarty and I. Swart.",
      journal: "REVIEW OF SCIENTIFIC INSTRUMENTS - AIP PUBLISHING",
      year: "2019",
      doi: "10.1063/1.5099590",
      link: "https://doi.org/10.1063/1.5099590",
    },
    {
      id: 3,
      title: "Chemical shielding of H2O and HF encapsulated inside a C60 cage",
      authors:
        "Samuel P. Jarvis, Filipe Junqueira, Alex Saywell, Philipp Rahe, Salvatore Mamone, Simon Taylor, Adam Sweetman, Jeremy Leaf, Hongqian Sang, Lev Kantorovich, David Duncan, Tien-Lin Lee, Pardeep Kumar, Richard Whitby, Philip Moriarty, and Robert G Jones.",
      journal: "NATURE COMMUNICATIONS CHEMISTRY",
      year: "2021",
      doi: "10.1038/s42004-021-00569-0",
      link: "https://doi.org/10.1038/s42004-021-00569-0",
      note: "An STM and XWS study. XWS performed at 109 hut at Diamond Light Source.",
    },
    {
      id: 4,
      title: "Atomic cranes for cyclic single vertical atom manipulations",
      authors:
        "David Abbasi-PÃ©rez, Hongqian Sang, Filipe Junqueira, Adam Sweetman, J. Manuel Recio, Philip Moriarty and Lev Kantorovich.",
      journal: "THE JOURNAL OF PHYSICAL CHEMISTRY LETTERS",
      year: "2021",
      doi: "10.1021/acs.jpclett.1c02271",
      link: "https://doi.org/10.1021/acs.jpclett.1c02271",
      note: "A DFT study.",
    },
  ];

  return (
    <Section title="Selected Publications" icon={BookOpen} id="publications">
      <p className="text-center text-lg text-emerald-600 mb-10 md:mb-12 max-w-2xl mx-auto">
        Contributing to the body of scientific knowledge through peer-reviewed
        research. Click "Explain with AI" for a quick summary!
      </p>
      <div className="space-y-6">
        {publications.map((pub, index) => (
          <AnimatedSection key={pub.id} delay={index * 0.1} threshold={0.05}>
            <PublicationItem pub={pub} />
          </AnimatedSection>
        ))}
      </div>
    </Section>
  );
};

/**
 * HoverFlipButton Component
 * A reusable button with a hover effect that flips its content.
 */
const HoverFlipButton = ({
  href,
  IconInitial,
  textInitial,
  textHover,
  bgColorInitial,
  bgColorHover,
  isExternal = true,
  ariaLabel,
}) => {
  const [isHovered, setIsHovered] = useState(false);

  return (
    <a
      href={href}
      target={isExternal ? "_blank" : "_self"}
      rel={isExternal ? "noopener noreferrer" : ""}
      className={`flex items-center justify-center font-semibold py-3 px-6 rounded-lg text-white transition-all duration-300 ease-in-out shadow-md hover:shadow-lg transform hover:scale-105 w-full sm:w-auto min-h-[50px] ${bgColorInitial} ${bgColorHover}`}
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
      aria-label={ariaLabel || textInitial}
    >
      <div className="relative w-full text-center overflow-hidden h-6">
        <span
          className={`absolute inset-0 flex items-center justify-center transition-all duration-300 ease-in-out ${isHovered ? "opacity-0 -translate-y-full" : "opacity-100 translate-y-0"}`}
          aria-hidden={isHovered}
        >
          {IconInitial && (
            <IconInitial size={20} className="mr-2 flex-shrink-0" />
          )}
          <span className="truncate">{textInitial}</span>
        </span>
        <span
          className={`absolute inset-0 flex items-center justify-center transition-all duration-300 ease-in-out ${isHovered ? "opacity-100 translate-y-0" : "opacity-0 translate-y-full"}`}
          aria-hidden={!isHovered}
        >
          <span className="truncate">{textHover}</span>
        </span>
      </div>
    </a>
  );
};

/**
 * ContactSection Component
 * Provides contact information with animated buttons.
 */
const ContactSection = () => {
  const contactButtons = [
    {
      href: "mailto:filipelqj@gmail.com",
      IconInitial: Mail,
      textInitial: "Personal Email",
      textHover: "filipelqj@gmail.com",
      bgColorInitial: "bg-red-500",
      bgColorHover: "hover:bg-red-600",
      isExternal: false,
      ariaLabel: "Email Filipe at his personal email address",
    },
    {
      href: "mailto:filipe.junqueira@nottingham.ac.uk",
      IconInitial: Mail,
      textInitial: "Nottingham Email",
      textHover: "filipe.junqueira@nottingham.ac.uk",
      bgColorInitial: "bg-emerald-500",
      bgColorHover: "hover:bg-emerald-600",
      isExternal: false,
      ariaLabel: "Email Filipe at University of Nottingham",
    },
    {
      href: "https://linkedin.com/in/filipejunqueira",
      IconInitial: Linkedin,
      textInitial: "LinkedIn",
      textHover: "View Profile",
      bgColorInitial: "bg-sky-600",
      bgColorHover: "hover:bg-sky-700",
      ariaLabel: "Filipe Junqueira on LinkedIn",
    },
    {
      href: "https://github.com/filipejunqueira",
      IconInitial: Github,
      textInitial: "GitHub",
      textHover: "View Repos",
      bgColorInitial: "bg-gray-700",
      bgColorHover: "hover:bg-gray-800",
      ariaLabel: "Filipe Junqueira on GitHub",
    },
  ];

  return (
    <Section title="Get In Touch" icon={Users} id="contact">
      <p className="text-center text-lg text-emerald-600 mb-8 md:mb-10 max-w-xl mx-auto">
        I'm always open to discussing new projects, collaborations, or just
        connecting with like-minded individuals. Feel free to reach out!
      </p>
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
        {contactButtons.map((button, index) => (
          <AnimatedSection key={index} delay={index * 0.1} threshold={0.1}>
            <HoverFlipButton {...button} />
          </AnimatedSection>
        ))}
      </div>
    </Section>
  );
};

/**
 * Footer Component
 * The footer at the bottom of the page.
 */
const Footer = () => (
  <footer className="bg-emerald-700 text-emerald-100 py-8 text-center">
    <div className="container mx-auto">
      <p>
        &copy; {new Date().getFullYear()} Filipe L. Q. Junqueira. All rights
        reserved.
      </p>
      <p className="text-sm mt-1">
        Crafted with React, Tailwind CSS, Framer Motion & Love :-)
      </p>
    </div>
  </footer>
);

// --- Main App Component ---
function App() {
  const [activeSection, setActiveSection] = useState("home");

  useEffect(() => {
    const hash = window.location.hash.substring(1);
    const sectionIdToScroll =
      hash || (activeSection !== "home" ? activeSection : null);

    if (sectionIdToScroll) {
      const element = document.getElementById(sectionIdToScroll);
      if (element) {
        const navbarHeight = document.querySelector("nav")?.offsetHeight || 0;
        const elementPosition =
          element.getBoundingClientRect().top + window.pageYOffset;
        const offsetPosition = elementPosition - navbarHeight - 20;

        window.scrollTo({ top: offsetPosition, behavior: "smooth" });
      }
    } else if (activeSection === "home" && !hash) {
      window.scrollTo({ top: 0, behavior: "smooth" });
    }
  }, [activeSection]);

  // Animation variants for main sections
  const fadeInFromLeft = {
    hidden: { opacity: 0, x: -50 },
    visible: {
      opacity: 1,
      x: 0,
      transition: { type: "spring", stiffness: 50 },
    },
  };

  const fadeInFromRight = {
    hidden: { opacity: 0, x: 50 },
    visible: {
      opacity: 1,
      x: 0,
      transition: { type: "spring", stiffness: 50 },
    },
  };

  return (
    <div className="font-sans bg-emerald-100 min-h-screen">
      <Navbar setActiveSection={setActiveSection} />
      <HeroSection />
      <main className="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <AnimatedSection
          id="scientist-animated-wrapper"
          variants={fadeInFromLeft}
          delay={0.1}
        >
          <ScientistCareer />
        </AnimatedSection>

        <AnimatedSection
          id="publications-animated-wrapper"
          variants={defaultVariants}
          delay={0.2}
        >
          <PublicationsSection />
        </AnimatedSection>

        <AnimatedSection
          id="blender-animated-wrapper"
          variants={fadeInFromRight}
          delay={0.1}
        >
          <BlenderCreations />
        </AnimatedSection>

        <AnimatedSection
          id="cli-animated-wrapper"
          variants={defaultVariants}
          delay={0.2}
        >
          <CLIPrograms />
        </AnimatedSection>

        <AnimatedSection
          id="contact-animated-wrapper"
          variants={fadeInFromLeft}
          delay={0.1}
        >
          <ContactSection />
        </AnimatedSection>
      </main>
      <Footer />
    </div>
  );
}

export default App;
